<specification xmlns='http://berjon.com/ns/re-spec/'
               xmlns:rs='http://berjon.com/ns/re-spec/'
               version='1.0'
               xml:lang='en-US'>
  <metadata>
    <title>Window Object 1.0</title>
    <styling type='W3C' status='ED'/>
    <date year='2006' month='03' day='30'/>
    <editors>
      <person>
        <name>Ian Davis</name>
        <email>ian.davis@talis.com</email>
        <company>Talis Information Ltd.</company>
        <company-url>http://www.talis.com/</company-url>
      </person>
      <person>
        <name>Maciej Stachowiak</name>
        <email>mjs@apple.com</email>
        <company>Apple Computer, Inc.</company>
        <company-url>http://apple.com/</company-url>
      </person>
    </editors>
    <versions>
      <current>http://dev.w3.org/cvsweb/~checkout~/2006/webapi/Window/publish/Window.html</current>
      <latest>http://dev.w3.org/cvsweb/~checkout~/2006/webapi/Window/publish/Window.html</latest>
    </versions>
  </metadata>

  <section xml:id='abstract' type='w3c-abstract'>
    <title>Abstract</title>

    <p>
      This specification defines the <term><code>Window</code>
      object</term>, which provides the global namespace for web
      scripting languages, access to other documents in a compound
      document by reference, navigation to other locations, and
      timers. The <term><code>Window</code> object</term> is a
      longstanding de facto standard for HTML user agents. However, it
      should not be assumed based on this or the name "Window" that it
      is limited to HTML or to visual user agents.
    </p>
  </section>

  <section xml:id='sotd' type='w3c-sotd'>
    <title>Status of this Document</title>

    <p>
      <em>This section describes the status of this document at the time of its publication.
      Other documents may supersede this document. A list of current W3C publications and the
      latest revision of this technical report can be found in the
      <a href='http://www.w3.org/TR/'>W3C technical reports index</a> at http://www.w3.org/TR/.</em>
    </p>
    <p>
      This document is produced by the <a href='http://www.w3.org/2006/webapi'>Web API
      <acronym title='Working Group'>WG</acronym></a> (part of the
      <a href='http://www.w3.org/2006/rwc/Activity'>Rich Web Clients Activity</a>).
      This document has no formal standing within the <acronym title='World Wide Web Consortium'>W3C</acronym>.
      Please send comments to <a href='mailto:public-webapi@w3.org'>public-webapi@w3.org</a>,
      the public email list for issues related to Web APIs.
    </p>
    <p>
      The patent policy for this document is the
      <a href='http://www.w3.org/Consortium/Patent-Policy-20040205/'>5 February 2004 W3C Patent Policy</a>.
      Patent disclosures relevant to this specification may be found on the
      <a href='http://www.w3.org/2004/01/pp-impl/38482/status' rel='disclosure'>Web API Working Group's patent
      disclosure page</a>. An individual who has actual knowledge of a patent which the individual believes
      contains Essential Claim(s) with respect to this specification should disclose the information in
      accordance with <a href='http://www.w3.org/Consortium/Patent-Policy-20040205/#sec-Disclosure'>section 6
      of the W3C Patent Policy</a>.
    </p>
    <p>
      Publication as an Editor's Draft does not imply endorsement by the W3C Membership.
      This is a draft document and may be updated, replaced or obsoleted by other
      documents at any time. It is inappropriate to cite this document as other than
      work in progress.
    </p>
  </section>

  <section xml:id='contents' type='toc'>
    <title>Table of contents</title>
    <?respec-toc?>
  </section>

  <section xml:id='introduction' normativity='not normative'>
    <title>Introduction</title>

    <p>
      The <strong>Window Object 1.0</strong> specification defines a
      subset of the features of the <term><code>Window</code>
      object</term>, a widely implemented part of HTML User Agents,
      with parts also found in non-HTML UAs that offer scripting and
      DOM access. This specification is intended to be suitable for
      all implementations that present any sort of DOM document
      [DOM3Core] to the user.
    </p>

    <p>
      This specification defines four features of the window
      object. It describes the use of the Window object as a
      <term>browsing context</term>: a container that displays a
      document, or a series of documents in sequence. It describes
      interfaces for <term>navigation</term>, the ability to go to
      a new document in the same <term>browsing context</term>. It
      describes interfaces for <strong>embedding</strong>, a feature
      also known as <strong>compound document by reference</strong>,
      where one document includes another separate document by
      external reference. And it specifies methods for using
      <strong>timers</strong>.
    </p>

    <p>
      In addition, for some languages, such as ECMAScript
      [ECMAScript], the <term><code>Window</code> interface</term> is
      implemented by the object that provides the global namespace for
      script execution. The details of how this works for ECMAScript
      are specified in <a href="#ecmascript-binding">ECMAScript
      Language Binding Appendix</a>.
    </p>

    <section xml:id='usage' normativity='not normative'>
      <title>Examples of usage</title>

      <ednote>ACTION-129: Write Window Object 1.0 "examples of usage" section.</ednote>
    </section>

    <section xml:id='notcovered' normativity='not normative'>
      <title>Not in This Specification</title>

      <p>
      This specification does not include the following features,
      which are also found on the Window object in some
      implementations. It is possible they will defined by other
      specifications or found in a future version of this specification.
      </p>

      <ul>
      <li>Access to frames by name <ednote>ISSUE-60: Should Window Object 1.0 include access to frames by name (window.frames)?</ednote></li>
      <li>Opening new windows</li>
      <li>Manipulating UI of existing windows</li>
      <li>Window size and position information</li>
      <li>Client information ("window.navigator")</li>
      <li>Window events</li>
      <li>Printing</li>
      <li>Focus</li>
      <li>Selection</li>
      <li>Editing</li>
      <li>Networking APIs</li>
      <li>Handling of binary data</li>
      </ul>
    </section>

    <section xml:id='definitions' normativity='not normative'>
      <title>Definitions</title>

      <p>
        This specification distinctively marks terms being defined,
        and references to definitions. Uses of terms are hyperlinks to
        the point of definition. An example of a definition:
      </p>

      <specexample>
        A <dfn>flux capacitor</dfn> is the part of user agents that has
	the most negative imaginary flux impedance.
      </specexample>

      <p>An example of use:</p>

      <specexample>
        When the engines are damaged, user agents typically calibrate
        the <term>flux capacitor</term>.
      </specexample>


    </section>

    <section xml:id='conformance'>
      <title>Conformance</title>

      <p>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT",
        "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in
        RFC 2119 [RFC2119].
      </p>
      <p>

	Sometimes, for readability, conformance requirements are
	phrased as requirements on elements, attributes, methods,
	interfaces, properties or functions. In all cases these are
	conformance requirements on implementations.
      </p>
      <p>
        This specification defines three classes of conformance:

      </p>
      <dl>
        <dt><dfn>conforming implementation</dfn></dt>
        <dd>
	  A <term>conforming implementation</term> of the <strong>Window
	  Object 1.0</strong> specification is one that implements all the
	  interfaces in this specification, and satisfies all other
	  MUST-, REQUIRED- and SHALL-level criteria in all parts of this
	  document other than language binding appendices.  
        </dd>

        <dt><dfn>conforming ECMAScript implementation</dfn></dt>

        <dd>
	  A <term>conforming ECMAScript implementation</term> of the
          <strong>Window Object 1.0</strong> specification is a
          <term>conforming implementation</term> that maps all of the
          interfaces in this specification to ECMAScript [ECMAScript],
          and satisfies the additional requirements in the <a
          href="#ecmascript-binding">ECMAScript Language Binding Appendix</a>.
	</dd>

        <dt><dfn>conforming Java implementation</dfn></dt>
        <dd>
	  A <term>conforming Java implementation</term> of the
          <strong>Window Object 1.0</strong> specification is a
          <term>conforming implementation</term> that maps all of the
          interfaces in this specification to Java [Java], and
          satisfies the additional requirements in the <a
          href="#java-binding">Java Language Binding Appendix</a>.
        </dd>

      </dl>

    </section>

  </section>

  <section xml:id='browsing'>
    <title>Browsing Contexts</title>

    <ednote>ACTION-130: Need to add definition of "document"</ednote>

    <p>
      A <dfn>browsing context</dfn> is a collection of one or more
      views that present a document or a sequence of documents to the
      user, using one or more views. Only one document of this
      sequence is presented at a time. A <term>browsing context</term>
      is said to <term>navigate</term> when it changes from presenting
      one document to another, for example by following a
      hyperlink. More is specified about navigation behavior in the <a
      href="#navigation">Navigation</a> section.
    </p>

    <p>
      A visual user agent typically presents a document by rendering
      it to a display. However, even non-visual agents could have a
      <term>browsing context</term>. For example, a voice browser also presents
      documents to the user. This also establishes a <term>browsing
      context</term>.
    </p>

    <p>
      An object that implements the <code>Document</code> interface
      [DOM3Core] and is presented in a <term>browsing context</term>
      MUST also implement the <code>DocumentWindow</code> interface.
    </p>

    <p>
      Each view of a <code>Document</code> presented in a
      <term>browsing context</term> MUST be represented by an object
      that implements the <term><code>Window</code> interface</term>. One of these
      is the <dfn>default view</dfn>. The <term>default view</term> is
      typically the primary mode of presentation to the user, and in
      interactive user agents, the primary means of interaction for
      the user. <ednote>ISSUE-61: Should the Window spec drop any conformance 
      requirements for AbstractViews besides the defaultView?</ednote>
    </p>

    <p>
      An object that implements the <term><code>Window</code>
      interface</term> is referred to as a <dfn><code>Window</code>
      object</dfn>. Note: despite the name, a
      <term><code>Window</code> object</term> does not necessarily
      represent an onscreen overlapping window, even in visual user
      agents.
    </p>

    <p>
      A document presented in a <term>browsing context</term> may have
      elements that embed additional documents, forming a Compound
      Document by Reference. Each such element creates a nested
      <term>browsing context</term>. This mechanism is described in <a
      href="#embedding">Embedding: Compound Documents by
      Reference</a>.
    </p>

    <p>
      When an event implementing the <code>UIEvent</code> interface [DOM3EV]
      is dispatched on any node in a <code>Document</code> presented in a
      <term>browsing context</term>, the value of the <code>view</code> attribute of the
      event MUST be the <code>Window</code> object where the user originated the
      event. 

<ednote>ISSUE-63: Should Window 1.0 drop the arguably redundant requirment on UIEvent.view?</ednote>

<ednote>ISSUE-64: Should the Window spec define Window's place in DOM event flow?</ednote>
    </p>

    <section xml:id='window'>
      <title>The <code>Window</code> Interface, Basic Attributes</title>

      <p>The <dfn><code>Window</code> interface</dfn> is fully
      specified in IDL in the <a href="#idl">IDL Definitions
      Appendix</a>. To better organize this specification, it is
      described in prose in mulitple IDL fragments.</p>

      <p>The <term><code>Window</code> interface</term> inherits from
      the <code>AbstractView</code> interface [DOM2Views].</p>

      <p>In implementations that support Document Object Model CSS
      from DOM Level 2 Views [DOM2Views], every
      <term><code>Window</code> object</term> MUST also implement the
      <code>ViewCSS</code> interface.</p>

      <schema>
      <title></title>
      <idl><![CDATA[

interface Window : views::AbstractView {
    // ...

    // self-references
    readonly attribute Window window;
    readonly attribute Window self;

    // ...
};]]></idl></schema>

      <p>
        The value of the <code>document</code> property inherited by
        <code>Window</code> objects from the <code>AbstractView</code> interface
        MUST be the <code>Document</code> for which the <code>Window</code> is a
        view. As a result, in addition to the <code>DocumentView</code> interface,
        it implements the <code>Document</code> and <code>DocumentWindow</code> 
	interfaces.
      </p>

      <section xml:id="window-basic-attributes">
        <title>Attributes</title>

        <p><term><code>Window</code> object</term>s MUST have the following
        attributes:</p>

        <dl>
          <dt><dfn><code>window</code> attribute</dfn></dt>
          <dd>
	    The value of the <term><code>window</code> attribute</term> MUST be the
            same <code>Window</code> object that has the attribute: the attribute
            is a self-reference.
          </dd>

          <dt><dfn><code>self</code> attribute</dfn></dt>
          <dd>
	    The value of the <term><code>self</code> attribute</term> MUST be the
            same <code>Window</code> object that has the attribute: the attribute
            is a self-reference. Consequently, the value of the <term><code>self</code> 
            attribute</term> MUST be the same object as the <term><code>window</code> 
	    attribute</term>.

            <ednote>ACTION-131: Need to define "being the same object" in such a way
	      that it is an equivalence relation. Then the second
	      conformance clause for "self" can just be a note.
            </ednote>
          </dd>
        </dl>

      </section>

      <section xml:id="window-basic-scripting">
        <title>Use in scripting</title>

        <p>
          The <term><code>Window</code> object</term> also has a special role as the
          global scope for scripts in the document in languages such as
          ECMAScript [ECMAScript]. Such use is specified by individual
          language bindings. For ECMAScript it is specified in the <a
          href="#ecmascript">ECMAScript Language Binding
          Appendix</a>.
        </p>

      </section>

    </section>

    <section xml:id='document-window'>
      <title>The <code>DocumentWindow</code> Interface, Basic Attributes</title>

      <p>To better organize this specification, the
      <code>DocumentWindow</code> interface is presented in mulitple
      IDL fragments. The full normative IDL interface is presented in
      the <a href="#idl">IDL Definitions Appendix</a>. This fragment
      defines only the most basic methods and attributes of the
      <code>Window</code> interface.</p>

<ednote>ISSUE-65: Should we also specify the parentWindow property? It is
effectively a synonym for defaultView but implemented by a different
set of UAs.</ednote>

      <schema>
      <title></title>
      <idl>

interface DocumentWindow : views::DocumentView {
    // ...
};</idl></schema>

      <p>
        The value of the <code>defaultView</code> attribute inherited
        by objects that implement the <code>DocumentWindow</code>
        interface inherit from the <code>AbstractView</code> interface
        MUST be the default view for the <term>browsing context</term> presenting
        the document, if any. In addition to the
        <code>AbstractView</code> interface, the default view MUST
        implement the <code>Window</code> interface. If a document is
	not being presented in a <term>browsing context</term> but nontheless
	implements the DocumentWindow interface, the value of the
        <code>defaultView</code> attribute MUST be
        <code>null</code>. <ednote>ISSUE-66: should Documents that
        aren't being presented be required to have a null
        defaultView?</ednote>
      </p>
    </section>

  </section>

  <section xml:id='navigation-and-session-history'>
    <title>Navigation and Session History</title>

    <p>A <term>browsing context</term> has a <dfn>session
    history</dfn>: a sequence of absolute URI references [RFC2396]. It
    also has a <dfn>current history position</dfn>, an integer index
    into the <term>session history</term> that identifies the absolute
    URI reference for the document currently being presented. The
    absolute URI reference at the <term>current history
    position</term> is called the <dfn>current location</dfn>. The
    <term>session history</term> models the back/forward system of
    navigation familiar to browser users.</p>

    <p>When a <term>browsing context</term> changes from one
    <term>current loation</term> to another, it is said to perform a
    <dfn>navigation</dfn> to a <dfn>target location</dfn>, as specified
    by an absolute URI reference.</p>

    <p>A <term>navigation</term> can be triggered in many different
    situations. For example, a user action, such as typing a URI in a
    location field or selecting a bookmark MAY have this
    effect. Markup languages and APIs also specify particular
    situations that trigger a <term>navigation</term>, such as
    activating a hyperlink or submitting a form. This specification
    defines some API operations that result in a
    <term>navigation</term>, using the algorithms described below.</p>

    <p>When a <term>browsing context</term> performs a
    <term>navigation</term> that is not specifically intended to be a
    history navigation, reload, or replacement, it MUST remove any
    entries in the <term>session history</term> after the
    <term>current history position</term>, append the <term>target
    location</term>, and update the <term>current history
    position</term> to point to it. These values MUST be updated at
    the moment the <term>browsing context</term> starts presenting the
    new <term>document</term>. In particular, they MUST NOT be updated
    while still presenting the last <term>document</term> (if
    different from the new one), and MUST be updated when presenting
    even a partialy loaded portion of the new
    <term>document</term>.</p>

    <p>When a <term>navigation</term> is performed to a <term>target
    location</term> that differs only in fragment identifier [RFC2396] from
    the <term>current location</term>, the <term>browsing
    context</term> MUST continue to present the same
    <term>document</term>, but MAY adjust its presentation of the
    document based on the fragment identifier. Individual markup
    languages SHOULD define the proper way to interpret fragment
    identifiers when displaying a document using that language.</p>
    <ednote>The SHOULD above doesn't relate to a conformance class,
    should we describe how a language spec can be
    Window-compatible?</ednote>

    <p><term>Conforming implementation</term>s MAY also offer user
    interfaces, APIs, markup language features or other mechanisms
    that result in a reload, replacement or history navigation,
    behaving as described below in the algorithms section or
    otherwise. Nothing in this section should be taken to require a
    linear user interface to <term>session history</term>, even though
    the processing model depends on a linear list. <term>Conforming
    implementations</term> may use a tree or any other method of
    organizing what is presented to the user.</p>

    <ednote>use newer URI RFC?</ednote>

    <section xml:id='object-relationships'>
      <title>Object Relationships</title>

      <p>In addition to the <term><code>Window</code> object</term>
      itself, <term>navigation</term> involves a number of other
      objects. In addition to the <term><code>Window</code>
      object</term> and the <term>document</term>, there are two other
      objects that participate in <term>navigation</term>, the
      <term><code>Location</code> object</term> and the
      <term><code>History</code> object</term>.</p>

      <p>These objects are, like the <term><code>Window</code>
      object</term>, associated with a specific <term>browsing
      context</term>.</p>

    <ednote>This would be a good place to add a diagram of object relationships - someone with art skills please help!</ednote>

    <ednote>Should define which objects are replaced on a navigation
    and which aren't. Window is not replaced, document sometimes is as
    mentioned above. With history and location I think it may vary per
    browser. Needs research.</ednote>


    </section>

    <section xml:id='navigation-algorithms'>
      <title>Navigation Algorithms</title>

	<p>All requirements for performing alogorithms are "as if"
	requirements - all observable behavior must be as if the
	<term>conforming implementation</term> had performed the
	required steps, but this specification makes no requirements
	on how this effect is achieved.</p>

	<section xml:id='uri-parsing'>
	  <title>URI Parsing</title>

	<p>The following algorithms are applied when parsing absolute
	URI references into components. Absolute URI referencess are
	parsed according to Uniform Resource Identifiers (URI):
	Generic Syntax [RFC2396], but the strings of interest when
	dealing with <term>browsing context</term>
	<term>navigation</term> are often somewhat different than the
	RFC standard pieces.</p>

	<dl>
	<dt><dfn>parseHash</dfn>(<var>URI-Ref</var>, <var>preserve-empty</var>)</dt>
	<dd>
	  <ol>
	    <li>If <var>URI-Ref</var> has a non-empty fragment
	    identifier [RFC2396], or has an empty fragment identifier
	    and <var>preserve-empty</var> is true, return the
	    concatenation of a number sign (#) and the fragment
	    identifier; and do not proceed to step 2. Otherwise go to
	    step 2.</li>
	    <li>Return the empty string.</li>
	  </ol>
	</dd>
	
	<dt><dfn>parseHost</dfn>(<var>URI-Ref</var>)</dt>

	<dd>Return the result of the following steps:
	  <ol>
	    <li>If <var>URI-Ref</var> is hierarchical and uses a
	    server-based naming authority [RFC2396], return the
	    hostport [RFC2396] portion of the naming authority and do
	    not proceed to step 2. Otherwise go to step 2.</li>

	    <li>Return the empty string.</li>
        </ol>
	</dd>

	<dt><dfn>parseHostname</dfn>(<var>URI-Ref</var>)</dt>

	<dd>Return the result of the following steps:
	  <ol>
	    <li>If <var>URI-Ref</var> is hierarchical and uses a
	    server-based naming authority [RFC2396], return the
	    host [RFC2396] portion of the naming authority and do
	    not proceed to step 2. Otherwise go to step 2.</li>

	    <li>Return the empty string.</li>
        </ol>
	</dd>

	<dt><dfn>parsePathname</dfn>(<var>URI-Ref</var>)</dt> 
	<dd> 
	  <ol>
	    <li>If <var>URI-Ref</var> is hierarchical, return the
	    abs_path [RFC2396] portion; and do not proceed to step
	    2. Otherwise go to step 2.</li>
	    <li>Return the empty string.</li>
          </ol>
        </dd>

	<dt><dfn>parsePort</dfn>(<var>URI-Ref</var>)</dt>
	<dd>Return the result of the following steps:
	  <ol>
	    <li>If <var>URI-Ref</var> is hierarchical and uses a
	    server-based naming authority [RFC2396], return the
	    port [RFC2396] portion of the naming authority and do
	    not proceed to step 2. Otherwise go to step 2.</li>

	    <li>Return the empty string.</li>
          </ol>
	</dd>

	<dt><dfn>parseProtocol</dfn>(<var>URI-Ref</var>)</dt> 
	<dd>Return the concatenation of the <var>URI-Ref</var>'s scheme
	[RFC2396] and a colon (:).</dd>

	<dt><dfn>parseSearch</dfn>(<var>URI-Ref</var>, <var>preserve-empty</var>)</dt> 
	<dd> 
	  <ol>
	    <li>If <var>URI-Ref</var> is hierarchical and has a
	    non-empty query [RFC2396], or has an empty query and
	    <var>preserve-emtpy</var> is true, return the
	    concatenation of a question mark (?) and the query; and do
	    not proceed to step 2. Otherwise go to step 2.</li>

	    <li>Return the empty string.</li>
          </ol>
        </dd>

	<dt><dfn>reconstructURI</dfn>(<var>protocol</var>, <var>host</var>, <var>pathname</var>, <var>query</var>, <var>fragment</var>)</dt> 
	<ednote>Need to define this algorithm</ednote>
	<dd>
	</dd>

	</dl>
	</section>

	<section xml:id='location-state'>
	  <title>Browsing Context State</title>

	<p>A <term>conforming implementation</term> MUST store several items
	of internal state for each <term>browsing context</term>:</p>

	<dl>
	<dt><dfn>session-history</dfn></dt>

	<dd>A sequence of absolute URI references representing the
	<term>session
	history</term>. <term>session-history</term>[<var>n</var>] for
	an integer <var>n</var> is the <var>n</var>-th entry in the <term>
	session history</term></dd>

	<dt><dfn>current-history-position</dfn></dt>
	<dd>An integer giving the index of the entry in the session
	history currently being presented in this <term>browsing
	context</term>, i.e. the <term>current history position</term>.</dd>

	<dt><dfn>current-location</dfn></dt>
	<dd>The absolute URI reference given by
	<term>session-history</term>[<term>current-history-position</term>].</dd>

	<dt><dfn>pending-location</dfn></dt>
	<dd>Either a string containing an absolute URI reference or
	null. This is used as part of the algorithms that perform
	various navigations.</dd>

	<dt><dfn>pending-navigation-type</dfn></dt>

	<dd>The value of this internal property is one of "normal",
	"replace", "reload" or "history".</dd>

	<dt><dfn>pending-history-position</dfn></dt>
	<dd>An integer used when a history navigation is pending.</dd>

	</dl>

	</section>

	<section xml:id='performing-navigation'>
	  <title>Performing Navigations</title>

	  <p>The following algorithms are used to perform
	  navigations. Many of the surprisingly detailed definitions
	  are required for interoperability.</p>

	<p>When a <term>browsing context</term> is REQUIRED to
	<dfn>actuate the pending navigation</dfn>, it MUST perform the
	following steps:</p>

	<ol>
	<li>If <term>pending-location</term> is null, terminate this
	algorithm without performing any further steps.</li>

	<li>Start the process of navigating to the absolute URI
	reference specified by <term>pending-location</term>.</li>

	<li>If <term>pending-navigation-type</term> is "reload", then
	the load MUST result in a new document being created, even
	though this is not normally the case for loads of the same
	base location. <term>Conforming implementation</term>s MAY load
	the document and referenced resources from origin, bypassing
	normal caching rules.</li>

	<li>Wait until enough of the document has loaded that the
	<term>browsing context</term> is ready to start presenting
	it.</li>

	<li>If <term>pending-navigation-type</term> is "replace" or
	"reload", then set
	<term>session-history</term>[<term>current-history-position</term>]
	to <term>pending-location</term>.</li>

	<li>If <term>pending-navigation-type</term> is "history", then
	set <term>current-history-position</term> to
	<term>pending-history-position</term>.</li>

	<li>If <term>pending-navigation-type</term> is "normal", then
	remove all items in <term>session-history</term> after
	<term>current-history-position</term>, append
	<term>pending-location</term>, and increase
	<term>current-history-position</term> by 1.</li>

	<li>Set <term>pending-location</term> to null.</li>
	</ol>

	<p>When a <term>browsing context</term> is REQUIRED
	to <dfn>navigate at the next opportunity</dfn> to an absolute
	URI reference <var>new-uri</var>, it MUST perform the following
	steps:</p>

	<ol>
	<li>Set <term>pending-location</term> to <var>new-uri</var>.</li>

	<li>Set <term>pending-navigation-type</term> to "normal".</li>

	<li>Complete execution of any currently in-progress event
	dispatch [DOM3EV], timer callbacks, or execution of
	scripts from markup elements, such as the HTML, XHTML or SVG
	<code>script</code> element.</li>

	<li>Ensure that no further inline script execution takes
	place, no additional timers fire, no additional user events
	are processed for the current document until the next step is
	performed.</li>

	<li><term>Actuate the pending navigation</term>.</li>
	</ol>

	<p>When a <term>browsing context</term> is REQUIRED to
	<dfn>replace the curent location</dfn> with a specified URI
	<var>new-uri</var>, it MUST perform the following steps:</p>

	<ol>
	<li>Set <term>pending-location</term> to <var>new-uri</var>.</li>

	<li>Set <term>pending-navigation-type</term> to "replace".</li>

	<li>Complete execution of any currently in-progress event
	dispatch [DOM3EV], timer callbacks, or execution of
	scripts from markup elements, such as the HTML, XHTML or SVG
	<code>script</code> element.</li>

	<li>Ensure that no further inline script execution takes
	place, no additional timers fire, no additional user events
	are processed for the current document until the next step is
	performed.</li>

	<li><term>Actuate the pending navigation</term>.</li>
	</ol>

	<p>When a <term>browsing context</term> is REQUIRED to
	<dfn>reload the curent location</dfn>, it MUST perform the
	following steps:</p>

	<ol>
	<li>Set <term>pending-location</term> to <term>current-location</term>.</li>

	<li>Set <term>pending-navigation-type</term> to "reload".</li>

	<li>Complete execution of any currently in-progress event
	dispatch [DOM3EV], timer callbacks, or execution of
	scripts from markup elements, such as the HTML, XHTML or SVG
	<code>script</code> element.</li>

	<li>Ensure that no further inline script execution takes
	place, no additional timers fire, no additional user events
	are processed for the current document until the next step is
	performed.</li>

	<li><term>Actuate the pending navigation</term>.</li>
	</ol>

	<p>When <term>browsing context</term>s it REQUIRED to
	<dfn>change history position</dfn> by <var>delta</var> steps,
	they MUST perform the following steps:</p>

	<ol>
	<li>If <var>delta</var> is 0, <term>reload the current location</term> and terminate.</li>

	<li>Let <var>new-history-position</var> be <var>delta</var>
	added to <term>current-history-position</term>.</li>

	<li>If <var>new-history-position</var> is less than 0 or
	greater than or equal to the number of entries in
	<term>session-history</term>, then terminate.</li>

	<li>Set <term>pending-history-position</term> to <var>new-history-position</var>.</li>

	<li>Set <term>pending-location</term> to
	<term>session-history</term>[<var>new-history-position</var>].</li>

	<li>Set <term>pending-navigation-type</term> to "history".</li>

	<li>Complete execution of any currently in-progress event
	dispatch [DOM3EV], timer callbacks, or execution of
	scripts from markup elements, such as the HTML, XHTML or SVG
	<code>script</code> element.</li>

	<li>Ensure that no further inline script execution takes
	place, no additional timers fire, no additional user events
	are processed for the current document until the next step is
	performed.</li>

	<li><term>Actuate the pending navigation</term>.</li>
	</ol>

	</section>

    </section>

    <section xml:id='window-location'>
      <title>The <code>Window</code> Interface, Location Attributes</title>

      <schema>
      <title></title>
      <idl><![CDATA[

interface Window : views::AbstractView {
    // ...

    // assigning this has special behavior in ECMAScript, but it is otherwise
    // read only. specifically, in ES a string URI can be assigned to location,
    // having the same effect as location.assign(URI)
    readonly attribute Location location;
    readonly attribute History history;

    // ...
};]]></idl></schema>

      <section xml:id="window-location-attributes">
        <title>Attributes</title>

        <p><term><code>Window</code> object</term>s MUST have the following
         attributes:</p>

    <dl>
        <dt><dfn>location</dfn></dt>
        <dd>
          The value of the <code>location</code> attribute MUST be the
          <code>Location</code> object that represents the window's current
          location. <ednote>Need to define the term "current location"
          in prose.</ednote>
        </dd>
    </dl>

    </section>

    </section>

    <section xml:id='document-location'>
      <title>The <code>DocumentWindow</code> Interface, Location Attributes</title>
      <schema>
      <title></title>
      <idl>

interface DocumentWindow  : views::DocumentView {
    // ...
    // same special JS assignment as window.location
    readonly attribute Location location;
    // ...
};</idl></schema>

      <section xml:id="document-location-attributes">
        <title>Attributes</title>

    <p><code>DocumentWindow</code> objects MUST implement the following
     attributes:</p>

    <dl>
        <dt><dfn>location</dfn></dt>
        <dd>The value of the <code>location</code> attribute MUST be a
         <code>Location</code> object that represents the
         <code>DocumentWindow</code>'s current location. The value MUST be the
         same as the Location for all views of the document.
         <ednote>Need to define the term
        "current location" in prose.</ednote></dd>
    </dl>

    </section>

    </section>

    <section xml:id='location'>
      <title>The <code>Location</code> Interface</title>

      <schema>
      <title></title>
      <idl>

interface Location {
    attribute dom::DOMString href;

    // pieces of the URI, per the generic URI syntax
    attribute dom::DOMString hash;
    attribute dom::DOMString host;
    attribute dom::DOMString hostname;
    attribute dom::DOMString pathname;
    attribute dom::DOMString port;
    attribute dom::DOMString protocol;
    attribute dom::DOMString search;

    void assign(in dom::DOMString uri);
    void replace(in dom::DOMString uri);
    void reload();
};</idl></schema>

      <section xml:id="location-attributes">
        <title>Attributes</title>

    <p><code>Location</code> objects MUST implement the following attributes:</p>

      <dl>
        <dt><dfn><code>href</code></dfn></dt>

        <dd>
          The value of the <term><code>href</code></term> attribute MUST be the
          <term>browsing context</term>'s
          <term>current-location</term>. When the <code>href</code>
          attribute is set to a new value, the new value MUST not be
          reflected immediately. Instead, the Location's <term>
          browsing context</term> MUST <term>navigate at the next
          opportunity</term> to the newly set value.
          <ednote>ISSUE-67: Should resolution of relative URI
          references sent to location be defined in JS bindings or
          generally?</ednote>

	</dd>

        <dt><dfn><code>hash</code></dfn></dt>
        <dd>
          The value of the <term><code>hash</code></term> attribute MUST be the
          result of
          <term>parseHash</term>(<term>current-location</term>, false).
	  When this atribute is set to a new value
          <var>new-hash</var>, user agents MUST NOT change the value
          of the <term><code>hash</code></term> attribute but instead MUST perform
          the following steps:

	  <ol>
	  <li>If <var>new-hash</var> does not start with a number sign
	  (#), then let <var>processed-new-hash</var> be the concatenation of #
	  and <var>new-hash</var>, otherwise let <var>processed-new-hash</var>
	  be <var>new-hash</var>.</li>

	  <li>Let <var>new-uri</var> be the result of
	  <term>reconstructURI</term>(<term>parseScheme</term>(<term>current-location</term>),
	  <term>parseHost</term>(<term>current-location</term>),
	  <term>parsePathname</term>(<term>current-location</term>),
	  <term>parseSearch</term>(<term>current-location</term>, true),
	  <var>processed-new-hash</var>).
	  </li>
	  
	  <li><term>Navigate at the next opportunity</term> to
	  <var>new-uri</var>.</li> 
	  </ol>

        </dd>

        <dt><dfn><code>host</code></dfn></dt>
        <dd>
          The value of the <term><code>host</code></term> attribute
          MUST be the result of
          <term>parseHost</term>(<term>current-location</term>).

	  When this atribute is set to a new value
          <var>new-host</var>, user agents MUST NOT change the value
          of the <term><code>host</code></term> attribute but instead MUST perform
          the following steps:

	  <ol>
	  <li>Let <var>new-uri</var> be the result of
	  <term>reconstructURI</term>(<term>parseScheme</term>(<term>current-location</term>),
	  <var>new-host</var>,
	  <term>parsePathname</term>(<term>current-location</term>),
	  <term>parseSearch</term>(<term>current-location</term>, true),
	  <term>parseHash</term>(<term>current-location</term>, true)).
	  </li>
	  
	  <li><term>Navigate at the next opportunity</term> to
	  <var>new-uri</var>.</li> 
	  </ol>

        </dd>


        <dt><dfn><code>hostname</code></dfn></dt>
        <dd>
          The value of the <term><code>host</code></term> attribute
          MUST be the result of
          <term>parseHostname</term>(<term>current-location</term>).
	  <ednote>Need to spec assigning this.</ednote>
        </dd>

        <dt><dfn><code>pathname</code></dfn></dt>
        <dd>
          The value of the <term><code>pathname</code></term> attribute
          MUST be the result of
          <term>parsePathname</term>(<term>current-location</term>).

	  When this atribute is set to a new value
          <var>new-pathname</var>, user agents MUST NOT change the value
          of the <term><code>pathname</code></term> attribute but instead MUST perform
          the following steps:

	  <ol>
	  <li>Let <var>new-uri</var> be the result of
	  <term>reconstructURI</term>(<term>parseScheme</term>(<term>current-location</term>),
	  <term>parseHost</term>(<term>current-location</term>),
	  <var>new-pathname</var>,
	  <term>parseSearch</term>(<term>current-location</term>, true),
	  <term>parseHash</term>(<term>current-location</term>, true)).
	  </li>
	  
	  <li><term>Navigate at the next opportunity</term> to
	  <var>new-uri</var>.</li> 
	  </ol>

        </dd>

        <dt><dfn><code>port</code></dfn></dt>
        <dd>
          The value of the <term><code>port</code></term> attribute
          MUST be the result of
          <term>parsePort</term>(<term>current-location</term>).
	  <ednote>Need to spec assigning this.</ednote>
        </dd>

        <dt><dfn><code>protocol</code></dfn></dt>
        <dd>
          The value of the <term><code>protocol</code></term> attribute
          MUST be the result of
          <term>parseProtocol</term>(<term>current-location</term>).

	  When this atribute is set to a new value
          <var>new-protocol</var>, user agents MUST NOT change the value
          of the <term><code>protocol</code></term> attribute but instead MUST perform
          the following steps:

	  <ol>
	  <li>If <var>new-protocol</var> does not end with a colon
	  (:), then let <var>processed-new-protocol</var> be the
	  concatenation of <var>new-protocol</var> and a colon (:),
	  otherwise let <var>processed-new-protocol</var> be
	  <var>new-protocol</var>.</li>

	  <li>Let <var>new-uri</var> be the result of
	  <term>reconstructURI</term>(<var>processed-new-protocol</var>,
	  <term>parseHost</term>(<term>current-location</term>),
	  <term>parsePathname</term>(<term>current-location</term>),
	    <term>parseSearch</term>(<term>current-location</term>, true),
	  <term>parseHash</term>(<term>current-location</term>, true)).
	  </li>
	  
	  <li><term>Navigate at the next opportunity</term> to
	  <var>new-uri</var>.</li> 
	  </ol>

        </dd>

        <dt><dfn><code>search</code></dfn></dt>
        <dd>
          The value of the <term><code>search</code></term> attribute
          MUST be the result of
          <term>parseSearch</term>(<term>current-location</term>).

	  When this atribute is set to a new value
          <var>new-search</var>, user agents MUST NOT change the value
          of the <term><code>search</code></term> attribute but instead MUST perform
          the following steps:

	  <ol>
	  <li>If <var>new-search</var> does not start with a question mark
	  (?), then let <var>processed-new-search</var> be the concatenation of ?
	  and <var>new-search</var>, otherwise let <var>processed-new-search</var>
	  be <var>new-search</var>.</li>

	  <li>Let <var>new-uri</var> be the result of
	  <term>reconstructURI</term>(<term>parseScheme</term>(<term>current-location</term>),
	  <term>parseHost</term>(<term>current-location</term>),
	  <term>parsePathname</term>(<term>current-location</term>),
	  <var>processed-new-search</var>,
	  <term>parseHash</term>(<term>current-location</term>, true)).
	  </li>
	  
	  <li><term>Navigate at the next opportunity</term> to
	  <var>new-uri</var>.</li> 
	  </ol>

       </dd>
     </dl>

     </section>

      <section xml:id="location-methods">
        <title>Methods</title>

    <p><code>Location</code> objects MUST implement the following methods:</p>

      <dl>

	<ednote>ISSUE-68: Should describe string conversion for
	various language bindings.</ednote>

        <dt><dfn><code>assign</code></dfn>(<var>uri</var>)</dt>

        <dd>When <term><code>assign</code></term> is called, the
        <term><code>Location</code> object</term> MUST
        <term>navigate at the next opportunity</term> to
        <var>uri</var>.</dd>

        <dt><dfn><code>replace</code></dfn>(<var>uri</var>)</dt>

        <dd>When <term><code>replace</code></term> is called, the
        <term><code>Location</code> object</term> MUST <term>replace the
        curent location</term> with <var>uri</var>.</dd>

        <dt><dfn><code>reload</code></dfn>()</dt>
        <dd>When <term><code>assign</code></term> is called, the
        <term><code>Location</code> object</term> MUST <term>reload the
        curent location</term>.</dd>

     </dl>
     </section>

    </section>

    <section xml:id='history'>
      <title>The <code>History</code> Interface</title>

      <schema>
      <title></title>
      <idl>

interface History {
  readonly attribute long length;
  void go(in long delta);
  void back();
  void forward();
};</idl></schema>

      <section xml:id="history-attributes">
        <title>Attributes</title>

    <p><code>History</code> objects MUST implement the following attributes:</p>

      <dl>
        <dt><dfn><code>length</code></dfn></dt>
        <dd>The value of the <term><code>length</code></term>
        attribute MUST be the number of items in the <term>browsing
        context</term>'s <term>session history</term>.</dd>
      </dl>
      </section>

      <section xml:id="history-methods">
        <title>Methods</title>
       <p><code>History</code> objects MUST implement the following methods:</p>

      <dl>

        <dt><dfn><code>go</code></dfn>(<var>delta</var>)</dt>
        <dd>When <term><code>go</code></term> is called, the
        <term>browsing context</term> MUST
        <term>change history position</term> by
        <var>delta</var> steps.<ednote>In ECMAScript, can also be called with no args.</ednote></dd>

        <dt><dfn><code>back</code></dfn>()</dt>
        <dd>When <term><code>back</code></term> is called, the
        <term>browsing context</term> MUST <term>change history
        position</term> by -1 steps.</dd>

        <dt><dfn><code>back</code></dfn>()</dt>
        <dd>When <term><code>forward</code></term> is called, the
        <term>browsing context</term> MUST <term>change history
        position</term> by +1 steps.</dd>
	</dl>
      </section>

    </section>

  </section>

  <section xml:id='embedding'>
    <title>Embedding: Compound Documents by Reference</title>
    <p>An element that refers to another document which is then embedded is
     called an <dfn>embedding element</dfn>. A
     document embedded in such an element is called a
     <dfn>child document</dfn>. Seen from a child
     document, the embedding element is part of a
     <dfn>parent document</dfn>. When a document
     has no embedding element that points to it the document is a
     <dfn>root document</dfn>. A document can be both
     a parent document and child document at the same time.</p>

    <ednote>The normative definitions of the various attributes should
    be moved to below the IDL to match other sections.</ednote>

    <p>The value of the <code>frameElement</code> attribute of a
     <code>Window</code> object MUST be the
     <term>embedding element</term>, or
     <code>null</code> if there is no such element. The value of the
     <code>parent</code> attribute of a <code>Window</code> object MUST be the
     <term>parent document</term>'s
     <code>Window</code> object or the document's <code>Window</code> object if
     there is no parent document. The value of the <code>top</code> attribute of
     a <code>Window</code> object MUST be the
     <term>root document</term>'s <code>Window</code>
     object.

     <ednote>For the ES bindings appendix: In ECMAScript these DOM
      attributes, even though readonly, to be set to different values. In such
      cases the attributes are simply the values set by the script
      author.</ednote>

     <ednote>This does not deal with security. Security should probably be
      taken care of in a separate part of the specification. That there is no
      restriction by design, but by security environment.</ednote>
    </p>
    <p>The <code>name</code> attribute of a <code>Window</code> object MUST be
     the name assigned by the <term>embedding
     element</term>, the empty string if there is no such element or a value set
     by the script author. How this name is extracted from the embedding
     element is language specific.

     <ednote>Need to mention that it can be set by Window.open() and the
      "target" attribute in some languages, basically anything that can open
      a new top-level <term>browsing context</term>.</ednote>
    </p>
    <p>For example, if you have
     <code>&lt;object data="<var>file</var>" id="test"/&gt;</code> in an XHTML
     document the <code>name</code> DOM attribute within <var>file</var> will be
     "test".</p>
    <p>The value of the <code>contentDocument</code> attribute of an object that
     implements the <code>EmbeddingElement</code> interface MUST be the
     <term>child document</term>'s
     <code>Document</code> object or <code>null</code> if there is no such
     object.

     <ednote>Need to discuss the possibility of embedding elements containing
      non-DOM content, like images or plugin content.</ednote>

     Likewise the <code>contentWindow</code> attribute of an object that
     implements the <code>EmbeddingElement</code> interface MUST be the child
     document's <code>Window</code> object or <code>null</code> if there is no
     such object. <!--the embedding element is not currently establishing a
     <term>browsing context</term>. <ednote>Can this ever happen?</ednote>-->
    </p>

    <section xml:id='window-embedding'>
      <title>The <code>Window</code> Interface, Embedding Attributes</title>

      <schema>
      <title></title>
      <idl><![CDATA[

interface Window {
    // name attribute of referencing frame/iframe/object, or name passed to
    // window.open
    attribute dom::DOMString name;

    // global object of containing document
    readonly attribute Window parent;

    // global object of outermost containing document
    readonly attribute Window top;

    // referencing <html:frame>, <html:iframe>, <html:object>, <svg:foreignObject>,
    // <svg:animation> or other embedding point, or null if none
    readonly attribute dom::Element frameElement;
};]]></idl></schema>

      <ednote>This needs fixing to clearly state the conformance requirements.</ednote>
      <ednote>This also needs to be merged with the above I think [anne].</ednote>

      <dl>
        <dt><dfn>parent</dfn></dt>
        <dd>An attribute containing a reference to <code>Window</code> object
         that contains this object.</dd>

        <dt><dfn>top</dfn></dt>
        <dd>An attribute containing a reference to the topmost Window object in
         the hierarchy that contains this object.</dd>

        <dt><dfn>name</dfn></dt>
        <dd>An attribute containing a unique name used to refer to this Window object.
	<ednote>Need to describe how this could come from a containing element.</ednote>
	</dd>

        <dt><dfn>frameElement</dfn></dt>
        <dd><ednote>@@TODO</ednote></dd>
      </dl>


    </section>

    <section xml:id='embeddingelt'>
      <title>The <code>EmbeddingElement</code> Interface</title>
      <schema>
      <title></title>
      <idl>

// must be on an object that also implements dom::Element
interface EmbeddingElement {
    readonly attribute dom::Document contentDocument;
    readonly attribute Window contentWindow;
};</idl></schema>

    </section>

    <ednote>Need actual description.</ednote>

  </section>

  <section xml:id='timers'>
    <title>Timers</title>

    <ednote>Need to describe processing model for timers.</ednote>

    <section xml:id='window-timers'>
      <title>The <code>Window</code> Interface, Timer Attributes</title>

      <schema>
      <title></title>
      <idl><![CDATA[

interface Window {
    // should timers allow more than long, maybe a floating point type?
    // don't think anyone's timers have more precision

    // one-shot timer
    long setTimeout(in TimerListener listener, in long milliseconds);
    void clearTimeout(in long timerID);

    // repeating timer
    long setInterval(in TimerListener listener, in long milliseconds);
    void clearInterval(in long timerID);
};]]></idl></schema>

<dl>
        <dt><dfn>setTimeout(<var>function</var>, <var>milliseconds</var>)</dfn></dt>
        <dd>This method calls the function once after a specified number of milliseconds elapses, until canceled by a call to clearTimeout. The methods returns a timerID which may be used in a subsequent call to clearTimeout to cancel the interval.</dd>

        <dt><dfn>setInterval(<var>function</var>, <var>milliseconds</var>)</dfn></dt>
        <dd>This method calls the function every time a specified number of milliseconds elapses, until canceled by a call to clearInterval. The methods returns an intervalID which may be used in a subsequent call to clearInterval to cancel the interval.</dd>

        <dt><dfn>clearTimeout(<var>timerID</var>)</dfn></dt>
        <dd>Cancels a timeout that was set with the setTimeout method.</dd>

        <dt><dfn>clearInterval(<var>intervalID</var>)</dfn></dt>
        <dd>Cancels an interval that was set with the setTimeout method.</dd>
    </dl>

    </section>

    <section xml:id='timerlistener'>
      <title>The <em>TimerListener</em> Interface</title>
      <schema>
      <title></title>
      <idl>

// behavior is always special in ECMAScript, this is defined only for the benefit
// of other languages
interface TimerListener {
    // what to put here?
};</idl></schema>

    <ednote>ISSUE-70: what to do about timers?</ednote>

    <ednote>Need to define this. In ES bindings, a function or string is the only thing allowed.</ednote>

    </section>

  </section>

  <section xml:id='security'>
    <title>Security Considerations</title>

    <ednote><p>My current plan for the "security considerations" section is that it will contain the following:</p>

<ul>
<li>Non-normative statements of fact about various security vulnerabilities that may affect Window implementations (unauthorized data access, phishing/pharming, frame injection, etc).</li>

<li>A normative requirement that UAs implement some security policy that is in line with some general principles of cross-site scripting security, with exemptions allowed for "trusted" content. Some rough cuts at it (this language is not nearly precise as it should be, just trying to get the rules across):
<ul>
    <li> "A script executing in a browsing context currently presenting a document from one origin MUST NOT be allowed to access remote content from a different origin in such a way that the script can then access the contents." (where "same origin" is defined as same URI scheme, host and port, modulo differences for document.domain which I guess needs to be in the spec).</li>
    <li> "A non-trusted document MUST NOT be allowed to navigate a browsing context unless one of the following holds: the browsing contexts have the same top-level browsing context; the target browsing context has the same origin as the source browsing context; one of the ancestor browsing contexts of the target browsing context has the same origin as the source; OR the target browsing context is a top-level browsing context and the user can see the context's current location."</li>
    <li> "A non-trusted document MUST NOT be allowed to access or navigate to content from a file: URI in any way."</li>
</ul></li>

<li>Specific cases where access and navigation must be allowed, notwithstanding any additional security restrictions (anything from the same origin).</li>

<li>Normative restrictions on what may be considered "trusted" content (MUST be from a specific known location, MUST NOT be transmitted over a network via an insecure protocol -- so you can't just say "my UA considers all content to be trusted" or "my company's homepage sent over non-SSL http is trusted".)</li>

<li>An example of a specific security model that is believed to satisfy these constraints.</li>
</ul>

<p>I would rather not have normative requirements on when UAs must or must not throw exceptions or return null or whatever, since these would merely represent our best current understanding of how to implement the security policy.</p>

<p>It may be that some of this belongs in the main body of the spec instead of in Security Considerations, let's figure that out when the security part is actually written.</p>

</ednote>

  </section>

  <section xml:id='idl' type='appendix'>
    <title>IDL Definitions</title>

    <ednote>Need to fill in the full IDL here.</ednote>
  </section>


  <section xml:id='ecmascript-binding' type='appendix'>
    <title>ECMAScript Language Binding</title>

    <ednote>Need to define all the ECMAScript-specific issues, such as which properties
    are shadowable or replaceable, assigning to the location property, passing functions or
    strings as timers, etc.</ednote>
  </section>

  <section xml:id='java-binding' type='appendix'>
    <title>Java Language Binding</title>

    <ednote>Need to write this.</ednote>
  </section>

  <section xml:id='acknow' type='appendix'>
    <title>Acknowledgements</title>

    <p>
      The WebAPI WG would like to thanks the following people for contributing to this specification:
    </p>

    <p>
      Bj&#246;rn H&#246;hrmann, Jim Ley, Cameron McCormack and Boris Zbarsky.
    </p>

    <p>
      Special thanks to Anne van Kesteren for writing the Embedding
      section and many other additions and improvenets.
    </p>

    <p>
      Special thanks to Ian Hickson for making the first attempt to
      standardize the Window object in Web Apps 1.0, drafts of which
      heavily influenced this document. In particular, he coined the
      term "browsing context".
    </p>

  </section>

  <section xml:id='bibref' type='appendix'>
    <title>References</title>

    <ednote>Need to be able to include organization and date for references.</ednote>

    <ednote>Need appropriate cites for DOM Core and OMG IDL.</ednote>

    <ednote>Need titles and authors for DOM2Views</ednote>
    <ednote>Need titles and authors for DOM3Core</ednote>
    <ednote>Need titles and authors for ECMAScript</ednote>
    <ednote>Need titles and authors for Java</ednote>

    <bibliography>
      <bibentry xml:id="DOM2Views">
      </bibentry>
      <bibentry xml:id="DOM3Core">
      </bibentry>
      <bibentry xml:id="ECMAScript">
      </bibentry>
      <bibentry xml:id="Java">
      </bibentry>
      <bibentry xml:id="RFC2396">
        <title>Uniform Resource Identifiers (URI): Generic Syntax</title>
        <link>http://www.ietf.org/rfc/rfc2396.txt</link>
      <authors>
        <person><name>T. Berners-Lee</name></person>
	<person><name>R. Fielding</name></person>
	<person><name>L. Masinter</name></person>
      </authors>
      </bibentry>
    </bibliography>
  </section>
</specification>
